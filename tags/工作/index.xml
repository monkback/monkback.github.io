<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工作 on Records</title>
    <link>https://monkback.github.io/tags/%E5%B7%A5%E4%BD%9C/</link>
    <description>Recent content in 工作 on Records</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 27 May 2020 17:48:29 +0800</lastBuildDate>
    
	<atom:link href="https://monkback.github.io/tags/%E5%B7%A5%E4%BD%9C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>分布式锁的一次问题排查</title>
      <link>https://monkback.github.io/post/work/cyclicbarrier/</link>
      <pubDate>Wed, 27 May 2020 17:48:29 +0800</pubDate>
      
      <guid>https://monkback.github.io/post/work/cyclicbarrier/</guid>
      <description>这篇文章来源于工作中发现的一个项目bug。 1、项目背景： 这是一个rpc服务，维护的是公司所有用户的基本信息，包括用户注册、修改、注销以及查询</description>
    </item>
    
    <item>
      <title>Utf 8</title>
      <link>https://monkback.github.io/post/work/utf-8/</link>
      <pubDate>Tue, 14 Apr 2020 17:29:06 +0800</pubDate>
      
      <guid>https://monkback.github.io/post/work/utf-8/</guid>
      <description>一个坑点，暂时作为记录： 在本地编辑好的文本文件，比如用notepad或者其他编辑器，或者你自己写一个Java、Python程序处理文本文件，</description>
    </item>
    
    <item>
      <title>Redis 分布式锁的可重入</title>
      <link>https://monkback.github.io/post/redis/redis-reentrant-lock/</link>
      <pubDate>Wed, 25 Dec 2019 15:38:33 +0800</pubDate>
      
      <guid>https://monkback.github.io/post/redis/redis-reentrant-lock/</guid>
      <description>最近在看《Redis 深度历险》这本书，我们都知道Redis用来实现分布式锁是一种常用的技术方案，本质上 就是用命令setnx ex来占据一个坑位</description>
    </item>
    
    <item>
      <title>遇到的FastJson的一个问题</title>
      <link>https://monkback.github.io/post/work/fastjson/</link>
      <pubDate>Thu, 21 Nov 2019 20:22:13 +0800</pubDate>
      
      <guid>https://monkback.github.io/post/work/fastjson/</guid>
      <description>最近在项目中遇到了一个问题，在打印日志的时候，使用了一个统一封装的框架，将一个对象A打出来。结果确发现在日志里打出来的这个对象有一些本来不应</description>
    </item>
    
    <item>
      <title>一次关于CompletionService的使用</title>
      <link>https://monkback.github.io/post/work/completionservice/</link>
      <pubDate>Thu, 31 Oct 2019 20:03:31 +0800</pubDate>
      
      <guid>https://monkback.github.io/post/work/completionservice/</guid>
      <description>背景 最近在项目里需要实现这样一个接口：从多个数据源分别查询不同的数据，再将所有的结果组装在一起，返回最终结果。本身上没有什么难点，只是这一段</description>
    </item>
    
    <item>
      <title>对paxos的一些理解</title>
      <link>https://monkback.github.io/post/work/paxos/</link>
      <pubDate>Mon, 14 Oct 2019 10:38:40 +0800</pubDate>
      
      <guid>https://monkback.github.io/post/work/paxos/</guid>
      <description>由于最近需要在组内做一个分享，而且Spring那块我还没搞完，就打算选paxos的一些问题来梳理理解一下，这也就是技术分享的最大好处，需要你</description>
    </item>
    
  </channel>
</rss>